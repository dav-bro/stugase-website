{"version":3,"sources":["webpack:///./src/components/title.js","webpack:///./src/hooks/useWindowDimensions.js","webpack:///./src/components/LayoutContent.js","webpack:///./src/pages/info.js"],"names":["Title","props","t","useTranslation","theme","className","span","offset","title","text","getWindowDimensions","window","width","innerWidth","breakpoint","height","innerHeight","Component","justMiddleContent","LayoutContent","render","leftContent","mainContent","this","children","rightContent","React","Children","map","child","key","some","x","push","xs","lg","xl","xxl","windowDimensions","useState","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","InfoClass","data","style","textAlign","Info","withTranslation"],"mappings":"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","file":"component---src-pages-info-js-0f43d19e2317747eff60.js","sourcesContent":["import React from 'react'\nimport {Col, Row} from \"antd\";\nimport {useTranslation} from \"react-i18next\";\n\n\nexport default function Title(props) {\n    const { t } = useTranslation();\n    let { theme } = props;\n    theme = theme ? theme : \"light\";\n    return(\n\n        <Row className={\"page-head-\" + theme }>\n            <Col span={14} offset={5}>\n                <h1 className={\"text-4xl heading-\" + theme}>{props.title ? props.title : t('in-progress')}</h1>\n                <p >{props.text ? props.text : t('in-progress')}</p>\n            </Col>\n        </Row>\n    )\n\n\n}\n","import { useState, useEffect } from 'react';\n\n\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    let breakpoint = \"xs\";\n\n    if (width >= 1600) {\n        breakpoint = \"xxl\";\n    } else if ( width >= 1200) {\n        breakpoint = \"xl\";\n    } else if ( width >= 992) {\n        breakpoint = \"lg\";\n    } else if ( width >= 768) {\n        breakpoint = \"md\";\n    } else if ( width >= 576) {\n        breakpoint = \"sm\";\n    } else if ( width < 576) {\n        breakpoint = \"xs\";\n    }\n\n    return {\n        width,\n        height,\n        breakpoint\n    };\n}\n\nexport default function useWindowDimensions() {\n    if (typeof window !== 'undefined') {\n        const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n        useEffect(() => {\n            function handleResize() {\n                setWindowDimensions(getWindowDimensions());\n            }\n\n            window.addEventListener('resize', handleResize);\n            return () => window.removeEventListener('resize', handleResize);\n        }, []);\n\n        return windowDimensions;\n    }\n}","import React from \"react\";\nimport {Row} from \"antd\";\nimport Col from \"antd/es/grid/col\";\nimport Title from \"./title\";\nimport useWindowDimensions from \"../hooks/useWindowDimensions\";\n\nconst justMiddleContent = [\"xs\", \"sm\", \"md\" ];\n\n\nclass LayoutContent extends React.Component{\n\n    render() {\n\n\n        let leftContent = null;\n        let mainContent = this.props.children;\n        let rightContent = null;\n\n        const { theme } = this.props;\n\n\n        React.Children.map(this.props.children, child => {\n            switch (child.key) {\n                case \"left-content\":\n                    leftContent = child;\n                    break;\n                case \"main-content\":\n                    mainContent = [child];\n                    break;\n                case \"right-content\":\n                    rightContent = child;\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        if (justMiddleContent.some(x => x === this.props.breakpoint)) {\n            mainContent.push(leftContent, rightContent);\n        }\n\n\n        return(\n            <div>\n\n                <Title theme={theme} title={this.props.title} text={this.props.text}/>\n\n                <div >\n                    <Row className={\"content-\" + theme}>\n\n                        <Col xs={{span: 0}} lg={{span: 4}} xl={{span: 5}} xxl={{span: 5}} className=\"left-content\">\n\n                            {leftContent}\n\n                        </Col>\n                        <Col xs={{span: 24}} lg={{span: 16}} xl={{span: 14}} xxl={{span: 14}} className={\"main-content-\" + theme}>\n\n                            {mainContent}\n\n                        </Col>\n\n                        <Col xs={{span: 0}} lg={{span: 4}} xl={{span: 5}} xxl={{span: 5}} className=\"right-content\">\n\n                            {rightContent}\n\n                        </Col>\n\n                    </Row>\n                </div>\n\n            </div>\n\n        )\n\n    }\n\n\n}\n\nfunction LayoutWithHook(Component) {\n    return function WrappedComponent(props) {\n        const windowDimensions = useWindowDimensions();\n        const breakpoint = windowDimensions ? windowDimensions.breakpoint : \"xxl\";\n        return <Component {...props} breakpoint={breakpoint} />;\n    }\n}\n\nLayoutContent = LayoutWithHook(LayoutContent);\n\n\nexport default LayoutContent;","import React from 'react';\nimport {withTranslation} from \"react-i18next\";\nimport LayoutContent from \"../components/LayoutContent\";\nimport ContextConsumer from \"../components/Context\";\n\nclass InfoClass extends React.Component{\n\n    render() {\n        // const { t } = this.props;\n        return (\n            <ContextConsumer>\n                {({ data }) => (\n                <LayoutContent theme={data.theme} >\n                    <div key=\"left-content\">\n                        left\n                    </div>\n                    <div key=\"main-content\" style={{textAlign: \"-webkit-center\"}}>\n                        <h1 className={\"text-4xl heading-\" + data.theme}>Main</h1>\n                    </div>\n                    <div key=\"right-content\">\n                        right\n                    </div>\n                </LayoutContent>\n                )}\n            </ContextConsumer>\n\n        );\n    }\n\n}\n\nconst Info = withTranslation()(InfoClass);\n\nexport default Info;"],"sourceRoot":""}