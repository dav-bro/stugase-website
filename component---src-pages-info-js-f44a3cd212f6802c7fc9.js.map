{"version":3,"sources":["webpack:///./src/components/title.js","webpack:///./src/components/LayoutContent.js","webpack:///./src/pages/info.js"],"names":["Title","props","t","useTranslation","theme","className","xs","span","offset","lg","xl","title","text","Component","justMiddleContent","LayoutContent","render","leftContent","mainContent","this","children","rightContent","React","Children","map","child","key","some","x","breakpoint","push","Context","data","xxl","windowDimensions","useWindowDimensions","InfoClass","style","textAlign","Info","withTranslation"],"mappings":"4MAKe,SAASA,EAAMC,GAAQ,IAC1BC,EAAMC,cAAND,EACFE,EAAUH,EAAVG,MAEN,OADAA,EAAQA,GAAgB,QAGpB,kBAAC,IAAD,CAAKC,UAAW,aAAeD,GAC3B,kBAAC,IAAD,CAAME,GAAI,CAACC,KAAM,GAAIC,OAAQ,GAAIC,GAAI,CAACF,KAAM,GAAIC,OAAQ,GAAIE,GAAI,CAACH,KAAM,GAAIC,OAAQ,IAC/E,yBAAKH,UAAU,gBACX,wBAAIA,UAAW,oBAAsBD,GAAQH,EAAMU,MAAQV,EAAMU,MAAQT,EAAE,gBAC3E,2BAAID,EAAMW,KAAOX,EAAMW,KAAOV,EAAE,mB,4BCRpD,IA4EwBW,EA5ElBC,EAAoB,CAAC,KAAM,KAAM,MAGjCC,E,0LAEFC,OAAA,WAAU,IAAD,OAGDC,EAAc,KACdC,EAAcC,KAAKlB,MAAMmB,SACzBC,EAAe,KAyBnB,OArBAC,IAAMC,SAASC,IAAIL,KAAKlB,MAAMmB,UAAU,SAAAK,GACpC,OAAQA,EAAMC,KACV,IAAK,eACDT,EAAcQ,EACd,MACJ,IAAK,eACDP,EAAc,CAACO,GACf,MACJ,IAAK,gBACDJ,EAAeI,MAOvBX,EAAkBa,MAAK,SAAAC,GAAC,OAAIA,IAAM,EAAK3B,MAAM4B,eAC7CX,EAAYY,KAAKb,EAAaI,GAK9B,kBAACU,EAAA,EAAD,MACK,gBAAGC,EAAH,EAAGA,KAAH,OACD,6BAEI,kBAAChC,EAAD,CAAOI,MAAO4B,EAAK5B,MAAOO,MAAO,EAAKV,MAAMU,MAAOC,KAAM,EAAKX,MAAMW,OAEpE,6BACI,kBAAC,IAAD,CAAKP,UAAW,WAAa2B,EAAK5B,OAE9B,kBAAC,IAAD,CAAKE,GAAI,CAACC,KAAM,GAAIE,GAAI,CAACF,KAAM,GAAIG,GAAI,CAACH,KAAM,GAAI0B,IAAK,CAAC1B,KAAM,GAAIF,UAAU,gBAEvEY,GAGL,kBAAC,IAAD,CAAKX,GAAI,CAACC,KAAM,IAAKE,GAAI,CAACF,KAAM,IAAKG,GAAI,CAACH,KAAM,IAAK0B,IAAK,CAAC1B,KAAM,IAAKF,UAAW,gBAAkB2B,EAAK5B,OAEnGc,GAIL,kBAAC,IAAD,CAAKZ,GAAI,CAACC,KAAM,GAAIE,GAAI,CAACF,KAAM,GAAIG,GAAI,CAACH,KAAM,GAAI0B,IAAK,CAAC1B,KAAM,GAAIF,UAAU,iBAEvEgB,U,GAvDLC,IAAMT,WAyEVA,EAQOE,EAA/BA,EAPW,SAA0Bd,GAC7B,IAAMiC,EAAmBC,cACnBN,EAAaK,EAAmBA,EAAiBL,WAAa,MACpE,OAAO,kBAAChB,EAAD,iBAAeZ,EAAf,CAAsB4B,WAAYA,MAOlCd,O,wICzFTqB,E,0LAEFpB,OAAA,WAEI,OACI,kBAAC,IAAD,MACK,gBAAGgB,EAAH,EAAGA,KAAH,OACD,kBAAC,IAAD,CAAe5B,MAAO4B,EAAK5B,OACvB,yBAAKsB,IAAI,gBAAT,QAGA,yBAAKA,IAAI,eAAeW,MAAO,CAACC,UAAW,mBACvC,wBAAIjC,UAAW,oBAAsB2B,EAAK5B,OAA1C,SAEJ,yBAAKsB,IAAI,iBAAT,c,GAdIJ,IAAMT,WA0BxB0B,EAAOC,cAAkBJ,GAEhBG","file":"component---src-pages-info-js-f44a3cd212f6802c7fc9.js","sourcesContent":["import React from 'react'\nimport {Col, Row} from \"antd\";\nimport {useTranslation} from \"react-i18next\";\n\n\nexport default function Title(props) {\n    const { t } = useTranslation();\n    let { theme } = props;\n    theme = theme ? theme : \"light\";\n    return(\n\n        <Row className={\"page-head-\" + theme }>\n            <Col  xs={{span: 24, offset: 0}} lg={{span: 16, offset: 4}} xl={{span: 14, offset: 5}}>\n                <div className=\"ml-5 lg:ml-0\">\n                    <h1 className={\"text-4xl heading-\" + theme}>{props.title ? props.title : t('in-progress')}</h1>\n                    <p>{props.text ? props.text : t('in-progress')}</p>\n                </div>\n\n            </Col>\n        </Row>\n    )\n\n\n}\n","import React from \"react\";\nimport {Row} from \"antd\";\nimport Col from \"antd/es/grid/col\";\nimport Title from \"./title\";\nimport useWindowDimensions from \"../hooks/useWindowDimensions\";\nimport ContextConsumer from \"./Context\";\n\nconst justMiddleContent = [\"xs\", \"sm\", \"md\" ];\n\n\nclass LayoutContent extends React.Component{\n\n    render() {\n\n\n        let leftContent = null;\n        let mainContent = this.props.children;\n        let rightContent = null;\n\n\n\n        React.Children.map(this.props.children, child => {\n            switch (child.key) {\n                case \"left-content\":\n                    leftContent = child;\n                    break;\n                case \"main-content\":\n                    mainContent = [child];\n                    break;\n                case \"right-content\":\n                    rightContent = child;\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        if (justMiddleContent.some(x => x === this.props.breakpoint)) {\n            mainContent.push(leftContent, rightContent);\n        }\n\n\n        return(\n            <ContextConsumer>\n                {({ data }) => (\n                <div>\n\n                    <Title theme={data.theme} title={this.props.title} text={this.props.text}/>\n\n                    <div >\n                        <Row className={\"content-\" + data.theme}>\n\n                            <Col xs={{span: 0}} lg={{span: 4}} xl={{span: 5}} xxl={{span: 5}} className=\"left-content\">\n\n                                {leftContent}\n\n                            </Col>\n                            <Col xs={{span: 24}} lg={{span: 16}} xl={{span: 14}} xxl={{span: 14}} className={\"main-content-\" + data.theme}>\n\n                                {mainContent}\n\n                            </Col>\n\n                            <Col xs={{span: 0}} lg={{span: 4}} xl={{span: 5}} xxl={{span: 5}} className=\"right-content\">\n\n                                {rightContent}\n\n                            </Col>\n\n                        </Row>\n                    </div>\n\n                </div>\n                )}\n            </ContextConsumer>\n\n        )\n\n    }\n\n\n}\n\nfunction LayoutWithHook(Component) {\n    return function WrappedComponent(props) {\n        const windowDimensions = useWindowDimensions();\n        const breakpoint = windowDimensions ? windowDimensions.breakpoint : \"xxl\";\n        return <Component {...props} breakpoint={breakpoint} />;\n    }\n}\n\nLayoutContent = LayoutWithHook(LayoutContent);\n\n\nexport default LayoutContent;","import React from 'react';\nimport {withTranslation} from \"react-i18next\";\nimport LayoutContent from \"../components/LayoutContent\";\nimport ContextConsumer from \"../components/Context\";\n\nclass InfoClass extends React.Component{\n\n    render() {\n        // const { t } = this.props;\n        return (\n            <ContextConsumer>\n                {({ data }) => (\n                <LayoutContent theme={data.theme} >\n                    <div key=\"left-content\">\n                        left\n                    </div>\n                    <div key=\"main-content\" style={{textAlign: \"-webkit-center\"}}>\n                        <h1 className={\"text-4xl heading-\" + data.theme}>Main</h1>\n                    </div>\n                    <div key=\"right-content\">\n                        right\n                    </div>\n                </LayoutContent>\n                )}\n            </ContextConsumer>\n\n        );\n    }\n\n}\n\nconst Info = withTranslation()(InfoClass);\n\nexport default Info;"],"sourceRoot":""}