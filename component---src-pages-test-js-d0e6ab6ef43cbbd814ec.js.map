{"version":3,"sources":["webpack:///./src/components/timePickerClock24.js","webpack:///./src/components/timePickerClock60.js","webpack:///./src/components/timePicker.js","webpack:///./src/components/modal.js","webpack:///./src/pages/test.js"],"names":["TimePickerClock24","setHours","setRenderState","initProps","i","max","push","textColor","textBg","textSize","useState","properties","setProperties","texts","setTexts","circles","setCircles","hoverLine","setHoverLine","lines","stuff","getX","factor","Math","cos","PI","getY","sin","getLine","part","maxParts","length","strokeAttributes","inverted","strokeWidth","width","strokeColor","color","x","y","calculatedLength","coordinates","x1","radius","y1","x2","y2","stroke","handleHover","ind","newProps","activeRing","handleClick","setTimeout","drawCircle","position","r","bgColor","cx","cy","fill","className","onMouseOver","onClick","getText","text","textAttributes","alignmentBaseline","textAnchor","hoverCircles","useEffect","style","center","height","TimePickerClock60","setMinutes","TimePicker","minutes","hours","renderState","enabled","setEnabled","top","left","Modal","children","close","setClose","innerEnabled","setInnerEnabled","onMouseLeave","icon","childs"],"mappings":"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","file":"component---src-pages-test-js-d0e6ab6ef43cbbd814ec.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n\nconst TimePickerClock24 = ({ setHours, setRenderState }) => {\n\n    let initProps = [];\n\n    const max = 24;\n\n    for ( let i = 1; i <= max/2; i++ ) {\n        initProps.push(\n            {\n                textColor: \"black\",\n                textBg: \"transparent\",\n                textSize: \"text-2xl\"\n            })\n    }\n    for ( let i = max/2 + 1; i <= max; i++ ) {\n        initProps.push(\n            {\n                textColor: \"grey\",\n                textBg: \"transparent\",\n                textSize: \"text-md\"\n            })\n    }\n\n    const [ properties, setProperties ] = useState(initProps);\n\n    const [ texts, setTexts ] = useState([]);\n    const [ circles, setCircles ] = useState([]);\n    const [ hoverLine, setHoverLine ] = useState(null);\n\n\n    let lines = [];\n    let stuff = [];\n\n\n    const radius = 200;\n\n\n    //------------------------------------------------------------\n\n\n    const clockWidth = 2;\n    let center = radius + clockWidth;\n\n/*\n        let x = Math.cos((part*2*Math.PI)/maxParts);\n        let y = Math.sin((part*2*Math.PI)/maxParts);*/\n\n    const getX = (factor) => (Math.cos(2*Math.PI*factor - Math.PI/2));\n    const getY = (factor) => (Math.sin(2*Math.PI*factor - Math.PI/2));\n\n\n\n\n    const getLine = (part, maxParts, length, strokeAttributes, inverted) => {\n\n        let strokeWidth = (strokeAttributes && strokeAttributes.width) ? strokeAttributes.width : 2;\n        let strokeColor = (strokeAttributes && strokeAttributes.color) ? strokeAttributes.color : \"black\";\n\n        let x = getX(part/maxParts);\n        let y = getY(part/maxParts);\n\n        let calculatedLength = radius - radius * length;\n\n\n        let coordinates = {\n            x1: center + calculatedLength * x,\n            y1: center + calculatedLength * y,\n            x2: center + x * (inverted ? 0 : radius),\n            y2: center + y * (inverted ? 0 : radius)\n        };\n\n\n\n\n        return             <line x1={coordinates.x1}  x2={coordinates.x2}\n                                 y1={coordinates.y1}  y2={coordinates.y2}\n                                 stroke={strokeColor}\n                                 strokeWidth={strokeWidth} />\n    };\n\n    function handleHover(ind) {\n        setHoverLine(getLine(ind + 1, max/2, (ind > 11 ? 4.8 : 2.8)/10, {width: 3, color: \"green\"}, true));\n        setHours(ind + 1);\n\n        let newProps = [...initProps];\n\n        let upperHalf = ind < 12;\n\n        function activeRing(i) {\n            return ind - 12 >= 0 && i - 12 >= 0 || ind - 12 < 0 && i - 12 < 0;\n        }\n\n        for (let i = 0; i < max; i++) {\n          newProps[i].textColor = activeRing(i) ? \"black\" : \"grey\";\n          newProps[i].textSize = activeRing(i) ? \"text-2xl\" : \"text-md\";\n      }\n\n        newProps[ind].textColor = \"white\";\n        newProps[ind].textBg = \"green\";\n\n\n        setProperties(newProps);\n    }\n\n\n    const handleClick = (ind) => {\n\n        setTimeout( () => {\n            setHours(ind);\n        }, 300);\n\n        setRenderState(2);\n    };\n\n    const drawCircle = (part, maxParts, position, r, bgColor) => {\n\n\n        let x = getX(part/maxParts);\n        let y = getY(part/maxParts);\n\n        let calculatedLength = radius - radius * position;\n\n\n        return             <circle  cx={center + calculatedLength * x} cy={center + calculatedLength * y + 2}\n                                    r={r} fill={bgColor} className=\"  cursor-pointer\"\n                                     onMouseOver={() => handleHover(part-1)} onClick={() => handleClick(part)}/>\n\n    };\n\n    const getText = (part, maxParts, position, text, textAttributes) => {\n\n        let x = getX(part/maxParts);\n        let y = getY(part/maxParts);\n\n\n        let calculatedLength = radius - radius * position;\n\n\n        return             <text x={center + calculatedLength * x} y={center + calculatedLength * y} alignmentBaseline={\"center \"}\n                                 className={\"transform translate-y-2 transition-all duration-300 cursor-pointer \" + properties[part - 1].textSize} fill={properties[part - 1].textColor} textAnchor=\"middle\"\n                                 onClick={() => handleClick(part)}>{text}</text>\n    };\n\n\n    let hoverCircles = [];\n\n    for (let i = 1; i <= max; i++){\n        hoverCircles.push(drawCircle(i, 12, (i > 12 ? 4 : 2)/10, 40, \"transparent\"));\n        lines.push(getLine(i, max/2, 1/10));\n\n    }\n\n    stuff.push(<circle  cx={center} cy={center }\n                        r={5} fill={\"green\"}/>);\n\n\n\n\n    useEffect(() => {\n\n\n\n\n\n        let texts = [];\n        let circles = [];\n\n        for (let i = 1; i <= max; i++){\n            if (i <= 12) {\n                texts.push(getText(i, 12, 2/10, i));\n                circles.push(drawCircle(i, 12, 2/10, 25, properties[i - 1].textBg));\n            } else {\n                texts.push(getText(i, 12, 4/10, i === 24 ? 0 : i));\n                circles.push(drawCircle(i, 12, 4/10, 25, properties[i - 1].textBg));\n            }\n        }\n        setTexts(texts);\n        setCircles(circles);\n    }, [properties]);\n\n\n    useEffect(() => {\n\n        handleHover(max - 1);\n\n    }, []);\n\n\n\n    return(\n\n    <div className=\"\" style={{width: center*2, height: center*2}}>\n        <svg width={2*center} height={2*center} >\n\n            <circle cx={center} cy={center} r={radius} stroke={\"black\"} fill={\"transparent\"} strokeWidth={clockWidth}/>\n\n            {lines}\n            {circles}\n            {hoverCircles}\n            {texts}\n            {hoverLine}\n            {stuff}\n\n\n            {/*<text x={center} y={center/ 1.7} alignmentBaseline={\"center \"}*/}\n                  {/*className=\" text-4xl cursor-pointer\" fill={\"black\"} textAnchor=\"middle\" >{hours}:{minutes}</text>*/}\n\n\n        </svg>\n    </div>\n    )\n\n\n};\n\n\n\n\nexport default TimePickerClock24;\n","import React, { useState, useEffect } from \"react\";\n\n\nconst TimePickerClock60 = ({ setMinutes, setRenderState }) => {\n\n    let initProps = [];\n\n    const max = 60;\n\n    for ( let i = 0; i <= 3; i++ ) {\n        initProps.push(\n            {\n                textColor: \"black\",\n                textBg: \"transparent\",\n                textSize: \"text-2xl\"\n            })\n    }\n\n\n    const [ properties, setProperties ] = useState(initProps);\n\n    const [ texts, setTexts ] = useState([]);\n    const [ circles, setCircles ] = useState([]);\n    const [ hoverLine, setHoverLine ] = useState(null);\n\n\n    let lines = [];\n    let stuff = [];\n\n\n    const radius = 200;\n\n\n    //------------------------------------------------------------\n\n\n    const clockWidth = 2;\n    let center = radius + clockWidth;\n\n    /*\n            let x = Math.cos((part*2*Math.PI)/maxParts);\n            let y = Math.sin((part*2*Math.PI)/maxParts);*/\n\n    const getX = (factor) => (Math.cos(2*Math.PI*factor - Math.PI/2));\n    const getY = (factor) => (Math.sin(2*Math.PI*factor - Math.PI/2));\n\n\n\n\n    const getLine = (part, maxParts, length, strokeAttributes, inverted) => {\n\n        let strokeWidth = (strokeAttributes && strokeAttributes.width) ? strokeAttributes.width : 2;\n        let strokeColor = (strokeAttributes && strokeAttributes.color) ? strokeAttributes.color : \"black\";\n\n        let x = getX(part/maxParts);\n        let y = getY(part/maxParts);\n\n        let calculatedLength = radius - radius * length;\n\n\n        let coordinates = {\n            x1: center + calculatedLength * x,\n            y1: center + calculatedLength * y,\n            x2: center + x * (inverted ? 0 : radius),\n            y2: center + y * (inverted ? 0 : radius)\n        };\n\n\n\n\n        return             <line x1={coordinates.x1}  x2={coordinates.x2}\n                                 y1={coordinates.y1}  y2={coordinates.y2}\n                                 stroke={strokeColor}\n                                 strokeWidth={strokeWidth} />\n    };\n\n    const handleHover = (ind) => {\n        setHoverLine(getLine(ind, 4, 2.8/10, {width: 3, color: \"green\"}, true));\n\n        setMinutes(ind * 15);\n\n        let newProps = [...initProps];\n\n        newProps[ind].textColor = \"white\";\n        newProps[ind].textBg = \"green\";\n\n\n        setProperties(newProps);\n    };\n\n    const handleClick = (ind) => {\n        setMinutes(ind * 15);\n        setRenderState(0);\n    };\n\n\n    const drawCircle = (part, maxParts, position, r, bgColor) => {\n\n\n        let x = getX(part/maxParts);\n        let y = getY(part/maxParts);\n\n        let calculatedLength = radius - radius * position;\n\n\n        return             <circle  cx={center + calculatedLength * x} cy={center + calculatedLength * y + 2}\n                                    r={r} fill={bgColor} className=\"  cursor-pointer\"\n                                    onMouseOver={() => handleHover(part)} onClick={() => handleClick(part)}/>\n\n    };\n\n    const getText = (part, maxParts, position, text, textAttributes) => {\n\n        let x = getX(part/maxParts);\n        let y = getY(part/maxParts);\n\n\n        let calculatedLength = radius - radius * position;\n\n\n        return             <text x={center + calculatedLength * x} y={center + calculatedLength * y} alignmentBaseline={\"center \"}\n                                 className={\"transform translate-y-2 transition-all duration-300 cursor-pointer \" + properties[part].textSize} fill={properties[part].textColor} textAnchor=\"middle\"\n                                 onClick={() => handleClick(part)}>{text}</text>\n    };\n\n\n    let hoverCircles = [];\n\n    for (let i = 0; i <= 3; i++){\n        hoverCircles.push(drawCircle(i, 4, 2/10, 40, \"transparent\"));\n        lines.push(getLine(i, 4, 1/10));\n\n    }\n\n    stuff.push(<circle  cx={center} cy={center }\n                        r={5} fill={\"green\"}/>);\n\n\n\n\n    useEffect(() => {\n\n\n\n\n\n        let texts = [];\n        let circles = [];\n\n        for (let i = 0; i <= 3; i++){\n\n                texts.push(getText(i, 4, 2/10, i * 15));\n                circles.push(drawCircle(i, 4, 2/10, 25, properties[i].textBg));\n\n        }\n        setTexts(texts);\n        setCircles(circles);\n    }, [properties]);\n\n\n    useEffect(() => {\n\n        handleHover(0);\n\n    }, []);\n\n\n\n    return(\n\n        <div className=\"\" style={{width: center*2, height: center*2}}>\n                <svg width={2*center} height={2*center} >\n\n                    <circle cx={center} cy={center} r={radius} stroke={\"black\"} fill={\"transparent\"} strokeWidth={clockWidth}/>\n\n                    {lines}\n                    {circles}\n                    {hoverCircles}\n                    {texts}\n                    {hoverLine}\n                    {stuff}\n\n\n                    {/*<text x={center} y={center/ 1.7} alignmentBaseline={\"center \"}*/}\n                    {/*className=\" text-4xl cursor-pointer\" fill={\"black\"} textAnchor=\"middle\" >{hours}:{minutes}</text>*/}\n\n\n                </svg>\n\n        </div>\n    )\n\n\n};\n\n\n\n\nexport default TimePickerClock60;\n","import React, { useEffect, useState } from \"react\";\nimport TimePickerClock24 from \"./timePickerClock24\";\nimport TimePickerClock60 from \"./timePickerClock60\";\nimport Modal from \"./modal\";\n\n\n\nconst TimePicker = ({}) => {\n\n\n    const [ minutes, setMinutes ] = useState(0);\n    const [ hours, setHours ] = useState(0);\n    const [ renderState, setRenderState ] = useState(0);\n\n\n\n    return(\n        <div className={\" flex flex-row  items-center  \" } >\n            <p className={\"cursor-pointer\"}\n               onClick={() => setRenderState(1)}\n            >\n                {hours < 10 ? \"0\" + hours : hours}\n            </p>\n            <p className=\" -mt-1 mx-1\">:</p>\n            <p className={\" cursor-pointer \" }\n               onClick={() => setRenderState(2)}\n            >\n                {minutes < 10 ? \"0\" + minutes : minutes}\n            </p>\n            <Modal enabled={renderState > 0} setEnabled={(x) => setRenderState(x ? renderState : 0)}>\n                <div className=\"relative bg-primary rounded-full\" style={{width: 402, height: 402}}>\n                    <div className={\"absolute top-0 left-0 transform duration-300 overflow-hidden z-10 \" + (renderState === 1 ? \"scale-100\" : \"scale-0\")}>\n                        <TimePickerClock24 max={12} setHours={setHours} setRenderState={setRenderState}/>\n                    </div>\n                    <div className={\"absolute top-0 left-0 transform duration-300 z-10 \" + (renderState === 2 ? \"scale-100\" : \"scale-0\")}>\n                        <TimePickerClock60 setMinutes={setMinutes} setRenderState={setRenderState} />\n                    </div>\n                    <div className=\"absolute flex flex-row  items-center justify-center -ml-12 -mt-16 z-10\" style={{top: \"50%\", left: \"50%\"}}>\n                        <p className={\"text-3xl text-primary font-bold transform duration-300 cursor-pointer  \" + (renderState === 1 ? \"scale-100 mr-2\" : \"scale-75 opacity-50\") }\n                           onClick={() => setRenderState(1)}\n                        >\n                            {hours < 10 ? \"0\" + hours : hours}\n                        </p>\n                        <p className=\"text-3xl text-primary font-bold -mt-2\">:</p>\n                        <p className={\"text-3xl text-primary font-bold cursor-pointer transform duration-300 \" + (renderState === 2 ? \"scale-100 ml-2\" : \"scale-75 opacity-50\") }\n                           onClick={() => setRenderState(2)}\n                        >\n                            {minutes < 10 ? \"0\" + minutes : minutes}\n                        </p>\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    )\n\n\n};\n\n\nexport default TimePicker;","import React, { useState, useEffect } from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome/index.es\";\n\n\nconst Modal = ({ enabled, setEnabled, children }) => {\n\n    const [ close, setClose ] = useState(false);\n    const [ innerEnabled, setInnerEnabled ] = useState(false);\n\n    useEffect(() => {\n\n        setInnerEnabled(enabled)\n\n\n\n    }, [enabled]);\n\n\n    return(\n        enabled ?\n            (\n                <div className={\"bg-disabled\"}>\n                        <div className=\"flex flex-col h-full justify-between items-center\">\n\n                            <div className=\"h-20 w-full flex  justify-center\" onMouseOver={() => setClose(true)} onMouseLeave={() => setClose(false)}>\n                                <FontAwesomeIcon icon=\"times-circle\" className={\"overflow-hidden duration-300 transition-all text-6xl cursor-pointer \" + (close ? \"h-20\" : innerEnabled ? \"h-20 md:h-0\" : \"h-0\")}\n                                onClick={() => {\n                                    setInnerEnabled(false);\n                                    setTimeout(() => (setEnabled(false)), 300);\n\n                                }}/>\n                            </div>\n\n                            <div className={\"transform duration-300 \" + (innerEnabled ? \"scale-100\" : \"scale-0\")}>{children}</div>\n\n                            <div className=\"h-20\"/>\n\n                        </div>\n                </div>\n            ) : null\n    )\n};\n\n\n\nexport default Modal;","\nimport React, {useState} from \"react\";\nimport TimePicker from \"../components/timePicker\";\n\n\nexport default () => {\n\n    let childs = [];\n\n    for (let i = 1; i <= 24; i++) {\n       childs.push(\n           <div className={\" bg-blue-300 mb-3 pl-3 w-\" + i + \"/24\" }>\n               {i}/24\n           </div>\n       )\n    }\n\n    const [enabled, setEnabled ] = useState(false);\n\n    return(\n    <div className=\"flex-grow\">\n\n        <div className=\"w-full mt-24\">\n            <h1 className=\"text-4xl border-1 between-line mb-10\"><span className=\"between-line-span\">Test Flex widths by n/24</span></h1>\n\n           {/* {childs}\n            <div className=\"flex flex-row items-center\">\n                <TimePicker maximum={24} onChange={(data) => console.log(data)} /> <p className=\"mx-2\">:</p>  <TimePicker maximum={59} onChange={(data) => console.log(data)} />\n            </div>*/}\n\n\n        </div>\n\n        <div className=\"w-1/3\">\n            <TimePicker/>\n        </div>\n\n    </div>\n    )\n\n\n\n\n}\n\n\n"],"sourceRoot":""}