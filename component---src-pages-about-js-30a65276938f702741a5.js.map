{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/Card.js","webpack:///./src/components/title.js","webpack:///./src/hooks/useWindowDimensions.js","webpack:///./src/components/LayoutContent.js"],"names":["AboutClass","render","t","this","props","data","title","text","uri","key","style","textAlign","theme","header","footer","className","src","logo","alt","React","Component","About","withTranslation","children","Title","useTranslation","span","offset","getWindowDimensions","window","width","innerWidth","breakpoint","height","innerHeight","justMiddleContent","LayoutContent","leftContent","mainContent","rightContent","Children","map","child","some","x","push","Context","xs","lg","xl","xxl","windowDimensions","useState","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions"],"mappings":"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","file":"component---src-pages-about-js-30a65276938f702741a5.js","sourcesContent":["import React from 'react';\nimport {withTranslation} from \"react-i18next\";\nimport '../static/styles/styles.less'\nimport logo from \"../static/images/SE_Logo_Text.png\"\nimport LayoutContent from \"../components/LayoutContent\";\nimport \"../static/styles/import\"\nimport ContextConsumer from \"../components/Context\";\nimport \"../static/styles/tailwind.css\"\nimport Card from \"../components/Card\";\n\n\nclass AboutClass extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        return(\n            <ContextConsumer>\n                {({ data }) => (\n                    <LayoutContent title=\"Moin\" text={t('about.header.text')} uri={\"/about\"}>\n\n                        <div key=\"left-content\" >\n                        </div>\n                        <div key=\"main-content\" style={{textAlign: \"-webkit-center\"}}>\n\n                            <Card\n                                theme={data.theme}\n                                header={t('about.what.title')}\n                                footer={<p className={\" text-base text-\" + data.theme} >\n                                            {t('about.what.text')}\n                                        </p>}\n                            >\n                                <img className=\"w-full\" src={logo} alt=\"Sunset in the mountains\" />\n                            </Card>\n\n\n                        </div>\n                        <div key=\"right-content\">\n\n                        </div>\n                    </LayoutContent>\n                )}\n\n            </ContextConsumer>\n\n        )\n    }\n\n}\n\nconst About = withTranslation()(AboutClass);\n\nexport default About;\n","import React from \"react\";\nimport ContextConsumer from \"./Context\";\n\nexport default ({ children, header, footer}) => {\n\n    // const { t } = props;\n\n    return(\n        <ContextConsumer>\n            {({ data }) => (\n\n            <div className={\"max-w-sm overflow-hidden border shadow-lg mt-3 card-\" + data.theme} >\n\n                <div className={\"font-bold text-xl mb-2 border-b border-bottom-\" + data.theme} >\n                    {header}\n                </div>\n                <div>\n                    {children}\n                </div>\n                <div className={\"px-6 py-4 border-t border-top-\" + data.theme}>\n                    {footer}\n                </div>\n\n            </div>\n            )}\n        </ContextConsumer>\n            )};\n\n\n\n\n\n\n","import React from 'react'\nimport {Col, Row} from \"antd\";\nimport {useTranslation} from \"react-i18next\";\n\n\nexport default function Title(props) {\n    const { t } = useTranslation();\n    let { theme } = props;\n    theme = theme ? theme : \"light\";\n    return(\n\n        <Row className={\"page-head-\" + theme }>\n            <Col span={14} offset={5}>\n                <h1 className={\"text-4xl heading-\" + theme}>{props.title ? props.title : t('in-progress')}</h1>\n                <p >{props.text ? props.text : t('in-progress')}</p>\n            </Col>\n        </Row>\n    )\n\n\n}\n","import { useState, useEffect } from 'react';\n\n\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    let breakpoint = \"xs\";\n\n    if (width >= 1600) {\n        breakpoint = \"xxl\";\n    } else if ( width >= 1200) {\n        breakpoint = \"xl\";\n    } else if ( width >= 992) {\n        breakpoint = \"lg\";\n    } else if ( width >= 768) {\n        breakpoint = \"md\";\n    } else if ( width >= 576) {\n        breakpoint = \"sm\";\n    } else if ( width < 576) {\n        breakpoint = \"xs\";\n    }\n\n    return {\n        width,\n        height,\n        breakpoint\n    };\n}\n\nexport default function useWindowDimensions() {\n    if (typeof window !== 'undefined') {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n        useEffect(() => {\n            function handleResize() {\n                setWindowDimensions(getWindowDimensions());\n            }\n\n            window.addEventListener('resize', handleResize);\n            return () => window.removeEventListener('resize', handleResize);\n        }, []);\n\n        return windowDimensions;\n    }\n}","import React from \"react\";\nimport {Row} from \"antd\";\nimport Col from \"antd/es/grid/col\";\nimport Title from \"./title\";\nimport useWindowDimensions from \"../hooks/useWindowDimensions\";\nimport ContextConsumer from \"./Context\";\n\nconst justMiddleContent = [\"xs\", \"sm\", \"md\" ];\n\n\nclass LayoutContent extends React.Component{\n\n    render() {\n\n\n        let leftContent = null;\n        let mainContent = this.props.children;\n        let rightContent = null;\n\n\n\n        React.Children.map(this.props.children, child => {\n            switch (child.key) {\n                case \"left-content\":\n                    leftContent = child;\n                    break;\n                case \"main-content\":\n                    mainContent = [child];\n                    break;\n                case \"right-content\":\n                    rightContent = child;\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        if (justMiddleContent.some(x => x === this.props.breakpoint)) {\n            mainContent.push(leftContent, rightContent);\n        }\n\n\n        return(\n            <ContextConsumer>\n                {({ data }) => (\n                <div>\n\n                    <Title theme={data.theme} title={this.props.title} text={this.props.text}/>\n\n                    <div >\n                        <Row className={\"content-\" + data.theme}>\n\n                            <Col xs={{span: 0}} lg={{span: 4}} xl={{span: 5}} xxl={{span: 5}} className=\"left-content\">\n\n                                {leftContent}\n\n                            </Col>\n                            <Col xs={{span: 24}} lg={{span: 16}} xl={{span: 14}} xxl={{span: 14}} className={\"main-content-\" + data.theme}>\n\n                                {mainContent}\n\n                            </Col>\n\n                            <Col xs={{span: 0}} lg={{span: 4}} xl={{span: 5}} xxl={{span: 5}} className=\"right-content\">\n\n                                {rightContent}\n\n                            </Col>\n\n                        </Row>\n                    </div>\n\n                </div>\n                )}\n            </ContextConsumer>\n\n        )\n\n    }\n\n\n}\n\nfunction LayoutWithHook(Component) {\n    return function WrappedComponent(props) {\n        const windowDimensions = useWindowDimensions();\n        const breakpoint = windowDimensions ? windowDimensions.breakpoint : \"xxl\";\n        return <Component {...props} breakpoint={breakpoint} />;\n    }\n}\n\nLayoutContent = LayoutWithHook(LayoutContent);\n\n\nexport default LayoutContent;"],"sourceRoot":""}